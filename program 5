import java.io.IOException;
import java.net.URL;
import java.util.Scanner;

public class wintt_Program5 {
	public static void main(String[] args){
		Animals a=new Animals();
		 Animals []p=a.read_Animals();
		a.sort_Animals(p);
		a.printReport(p);
		}
}
class Animals{
	private String name;
	private int year;
	private double balance;
	private String species;
	private int Nlegs;
	private String bloodtype;
	private boolean Mammel=false;
	private int Npets=0;
	
	void setName(String name) {this.name=name;}
	void setYear(int year){this.year=year;}
	void setBalance(int balance){this.balance=balance;}
	void setSpecies(String species) {this.species=species;}
	void setNlegs(int Nlegs){this.Nlegs=Nlegs;}
	void setBloodtype(String bloodtype){this.bloodtype=bloodtype;}
	void setMammel(boolean Mammel){this.Mammel=Mammel;}
	
	
	
	String getName() {return name;}
	int getYear(){return year;}
	double getBalance(){return balance;}
	String getSpecies(){return species;}
	int getNlegs(){return Nlegs;}
	String getBloodtype(){return bloodtype;}
	boolean getMammel(){return Mammel;}
	
	public Animals[] read_animals(){return null;}
	public void sort_Animals(Animals[] p) {
		
			Animals pt=new Animals();
		
			for (int i=0; i<Npets; i++) {
				for (int j=i+1; j<Npets; j++) {
					if (p[i].balance > p[j].balance) {
						  	pt.setName(p[i].getName());
		                    p[i].setName(p[j].getName());
		                    p[j].setName(pt.getName());
		                    pt.setYear(p[i].getYear());
		                    p[i].setYear(p[j].getYear());
		                    p[j].setYear(pt.getYear());
		                    pt.balance=p[i].balance;
		                    p[i].balance=p[j].balance;
		                    p[j].balance=pt.balance;
		                    pt.setSpecies(p[i].getSpecies());
		                    p[i].setSpecies(p[j].getSpecies());
		                    p[j].setSpecies(pt.getSpecies());
		                    pt.setBloodtype(p[i].getBloodtype());
		                    p[i].setBloodtype(p[j].getBloodtype());
		                    p[j].setBloodtype(pt.getBloodtype());
		                    pt.setNlegs(p[i].getNlegs());
		                    p[i].setNlegs(p[j].getNlegs());
		                    p[j].setNlegs(pt.getNlegs());
		                    pt.setMammel(p[i].getMammel());
		                    p[i].setMammel(p[j].getMammel());
		                    p[j].setMammel(pt.getMammel());}}}
		
	}
	public void printReport(Animals[] p) {
		for (int i=0; i<Npets; i++){
		System.out.printf("Owner: "+ p[i].getName()+ ", year: "+p[i].year+ ", price: "+
				p[i].getBalance(), " , species"+p[i].getSpecies());
		System.out.println();
		}
		
	}

	// constructor

	
	
	
	//read data
	
	public Animals[] read_Animals(){
		try{
			URL url=new URL("http://imc.kean.edu/CPS2231/program5.txt");
			Scanner input=new Scanner(url.openStream());
			Npets=input.nextInt();
			Animals[] p=new Animals[Npets];
			
			input.nextLine();
			for(int i=0;i<Npets;i++){
				p[i]=new Animals();
				p[i].name=input.next();
				p[i].year=input.nextInt();
				p[i].balance=input.nextInt();
				p[i].species=input.next();
				if(input.hasNextInt()==true){
					p[i].Nlegs=input.nextInt();
				p[i].Mammel=true;}
					else
						p[i].bloodtype=input.next();}
				
			//	System.out.println(i+": "+p[i].name+ " :"+p[i].year+" :"+p[i].balance);
			return p;	
			
		}
		catch(IOException e){e.printStackTrace();}
		return null;
		}
	}
